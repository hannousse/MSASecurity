Prefix(:=<http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA>

Declaration(Class(:Access_Control))
Declaration(Class(:Adhoc_Metrics))
Declaration(Class(:ArchitecturalLayer))
Declaration(Class(:Auditing))
Declaration(Class(:Authentication))
Declaration(Class(:Authorization))
Declaration(Class(:Case_Study))
Declaration(Class(:Complexity_Measuring))
Declaration(Class(:Data_Attacks))
Declaration(Class(:Formal_Verification))
Declaration(Class(:Infrastructure_Attacks))
Declaration(Class(:Manual_Testing))
Declaration(Class(:Mitigation))
Declaration(Class(:Performance_analysis))
Declaration(Class(:Prevention))
Declaration(Class(:Proof_Of_Concept))
Declaration(Class(:Qualitative_analysis))
Declaration(Class(:Quantitative_analysis))
Declaration(Class(:SecurityInMSA))
Declaration(Class(:SecurityMechanism))
Declaration(Class(:SecurityThreat))
Declaration(Class(:Simulation))
Declaration(Class(:Software_Attacks))
Declaration(Class(:SolutionType))
Declaration(Class(:TargetPlatform))
Declaration(Class(:ThreatSource))
Declaration(Class(:Tool_Based_Testing))
Declaration(Class(:User_Based_Attacks))
Declaration(Class(<http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Security_V&V_Technique>))
Declaration(ObjectProperty(:applicableAt))
Declaration(ObjectProperty(:applicableTo))
Declaration(ObjectProperty(:hasSource))
Declaration(ObjectProperty(:hasType))
Declaration(ObjectProperty(:treatedBy))
Declaration(ObjectProperty(:treats))
Declaration(ObjectProperty(:validatedThrough))
Declaration(DataProperty(:abbriviation))
Declaration(DataProperty(:also_known_as))
Declaration(DataProperty(:description))
Declaration(NamedIndividual(:Ability_to_logout))
Declaration(NamedIndividual(:Application_Programming_Interface))
Declaration(NamedIndividual(:Attribute-Based_Access_Control))
Declaration(NamedIndividual(:Auditing))
Declaration(NamedIndividual(:Blockchain_technology))
Declaration(NamedIndividual(:Brute_Force_Attack))
Declaration(NamedIndividual(:CPU_usage))
Declaration(NamedIndividual(:Centralized_Control_Access_Manager))
Declaration(NamedIndividual(:Certificates))
Declaration(NamedIndividual(:Cloud))
Declaration(NamedIndividual(:Code_Reuse_Attack))
Declaration(NamedIndividual(:Communication))
Declaration(NamedIndividual(:Composition))
Declaration(NamedIndividual(:Compromise_Hypervisor))
Declaration(NamedIndividual(:Compromise_Management_Interface))
Declaration(NamedIndividual(:Compromise_Network_Nodes))
Declaration(NamedIndividual(:Compromise_containers))
Declaration(NamedIndividual(:Compromise_discovery_service))
Declaration(NamedIndividual(:Compromise_microservices))
Declaration(NamedIndividual(:Compromize_Operating_Systems))
Declaration(NamedIndividual(:Compromize_Virtual_Machines))
Declaration(NamedIndividual(:Container_based))
Declaration(NamedIndividual(:Continuous_Monitoring))
Declaration(NamedIndividual(:Cross-Site_Request_Forgery))
Declaration(NamedIndividual(:Deception))
Declaration(NamedIndividual(:Denial_of_Service))
Declaration(NamedIndividual(:Deployment))
Declaration(NamedIndividual(:Disrupt_Sensitive_Operation))
Declaration(NamedIndividual(:Distribute_sessions))
Declaration(NamedIndividual(:Diversification))
Declaration(NamedIndividual(:Diversification_Index))
Declaration(NamedIndividual(:Downgrade_Attack))
Declaration(NamedIndividual(:Dynamic_code_analysis))
Declaration(NamedIndividual(:Eavesdropping))
Declaration(NamedIndividual(:Encryption))
Declaration(NamedIndividual(:External))
Declaration(NamedIndividual(:Firewalls))
Declaration(NamedIndividual(:Framework))
Declaration(NamedIndividual(:Gateways))
Declaration(NamedIndividual(:Gatling_Open_Source_Load_Testing))
Declaration(NamedIndividual(:General_Protection_Measures))
Declaration(NamedIndividual(:HIP_exchange_protocol))
Declaration(NamedIndividual(:HTTP_signatures))
Declaration(NamedIndividual(:Hard-Infrastructure))
Declaration(NamedIndividual(:Hardware_Security_Module))
Declaration(NamedIndividual(:Hardware_backdoors))
Declaration(NamedIndividual(:Heartblead))
Declaration(NamedIndividual(:IP_Suffling))
Declaration(NamedIndividual(:Independent))
Declaration(NamedIndividual(:Injection))
Declaration(NamedIndividual(:IntelliJ_IDEA_Unit-Testing))
Declaration(NamedIndividual(:Internal))
Declaration(NamedIndividual(:IoT))
Declaration(NamedIndividual(:Isolation_of_sucpecious_microservices))
Declaration(NamedIndividual(:J-Pack_protocol))
Declaration(NamedIndividual(:JSON_Web_Tokens))
Declaration(NamedIndividual(:Jadex))
Declaration(NamedIndividual(:Kubernetes))
Declaration(NamedIndividual(:Least-privilege))
Declaration(NamedIndividual(:Live_migration))
Declaration(NamedIndividual(:Machine_learning))
Declaration(NamedIndividual(:Malicious_Images))
Declaration(NamedIndividual(:Malicious_Insider))
Declaration(NamedIndividual(:Malicious_Provider))
Declaration(NamedIndividual(:Man_in_The_Middle))
Declaration(NamedIndividual(:Methodology))
Declaration(NamedIndividual(:Microservice))
Declaration(NamedIndividual(:Misconfiguration))
Declaration(NamedIndividual(:Mitigation))
Declaration(NamedIndividual(:No-shared_memory_access))
Declaration(NamedIndividual(:No_inherent_bottelneck))
Declaration(NamedIndividual(:OAuth2))
Declaration(NamedIndividual(:OpenAPI_Documents))
Declaration(NamedIndividual(:Open_ID))
Declaration(NamedIndividual(:Osmotic))
Declaration(NamedIndividual(:Padding_Oracle_On_Downgraded_Legacy_Encryption_Attack))
Declaration(NamedIndividual(:Port_Scan_Attack))
Declaration(NamedIndividual(:Prevention))
Declaration(NamedIndividual(:Proper_design))
Declaration(NamedIndividual(:Quality_of_Deception))
Declaration(NamedIndividual(:Replay_Attack))
Declaration(NamedIndividual(:Restart_micorservices))
Declaration(NamedIndividual(:Role-Based_Access_Control))
Declaration(NamedIndividual(:Rollback_microservices))
Declaration(NamedIndividual(:SGX_Technology_with_enclaves))
Declaration(NamedIndividual(:Sandbox_escape))
Declaration(NamedIndividual(:Scan_container_images))
Declaration(NamedIndividual(:Secure_language))
Declaration(NamedIndividual(:Sensitive_Data_Exposure))
Declaration(NamedIndividual(:Session_Hijacking))
Declaration(NamedIndividual(:Short-lived_Tokens))
Declaration(NamedIndividual(:Simple_to_implement))
Declaration(NamedIndividual(:Single_Sign-On))
Declaration(NamedIndividual(:Single_point_feailure))
Declaration(NamedIndividual(:Smart-Contracts))
Declaration(NamedIndividual(:Sniffing_Attack))
Declaration(NamedIndividual(:Soft-Infrastructure))
Declaration(NamedIndividual(:Spoofing_Attack))
Declaration(NamedIndividual(:Spring))
Declaration(NamedIndividual(:Static_code_analysis))
Declaration(NamedIndividual(:Stress_Attack))
Declaration(NamedIndividual(:TLS_protocol))
Declaration(NamedIndividual(:Technique))
Declaration(NamedIndividual(:Throughput))
Declaration(NamedIndividual(:Tool))
Declaration(NamedIndividual(:Traffic_measurement))
Declaration(NamedIndividual(:Unauthorized_Access))
Declaration(NamedIndividual(:Violate_Non-repudiation))
Declaration(NamedIndividual(:Web_app))
Declaration(NamedIndividual(<http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#5G>))
Declaration(NamedIndividual(<http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#R/W_permission_to_message_broker>))
Declaration(NamedIndividual(<http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Sacle-up/down_N-variant_micorservices>))
Declaration(NamedIndividual(<http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#White-list_HTTP/IP>))
############################
#   Object Properties
############################

# Object Property: :applicableAt (:applicableAt)

ObjectPropertyDomain(:applicableAt :SecurityMechanism)
ObjectPropertyRange(:applicableAt :ArchitecturalLayer)

# Object Property: :applicableTo (:applicableTo)

ObjectPropertyDomain(:applicableTo :SecurityMechanism)
ObjectPropertyRange(:applicableTo :TargetPlatform)

# Object Property: :hasSource (:hasSource)

ObjectPropertyDomain(:hasSource :SecurityThreat)
ObjectPropertyRange(:hasSource :ThreatSource)

# Object Property: :hasType (:hasType)

ObjectPropertyDomain(:hasType :SecurityMechanism)
ObjectPropertyRange(:hasType :SolutionType)

# Object Property: :treatedBy (:treatedBy)

InverseObjectProperties(:treatedBy :treats)
ObjectPropertyDomain(:treatedBy :SecurityThreat)
ObjectPropertyRange(:treatedBy :SecurityMechanism)

# Object Property: :treats (:treats)

ObjectPropertyDomain(:treats :SecurityMechanism)
ObjectPropertyRange(:treats :SecurityThreat)

# Object Property: :validatedThrough (:validatedThrough)

ObjectPropertyDomain(:validatedThrough :SecurityMechanism)
ObjectPropertyRange(:validatedThrough <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Security_V&V_Technique>)


############################
#   Data Properties
############################

# Data Property: :abbriviation (:abbriviation)

SubDataPropertyOf(:abbriviation owl:topDataProperty)
DataPropertyDomain(:abbriviation :SecurityThreat)
DataPropertyRange(:abbriviation xsd:string)

# Data Property: :description (:description)

DataPropertyDomain(:description :SecurityThreat)
DataPropertyRange(:description xsd:string)



############################
#   Classes
############################

# Class: :Access_Control (:Access_Control)

SubClassOf(:Access_Control :SecurityMechanism)

# Class: :Adhoc_Metrics (:Adhoc_Metrics)

SubClassOf(:Adhoc_Metrics <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Security_V&V_Technique>)

# Class: :ArchitecturalLayer (:ArchitecturalLayer)

SubClassOf(:ArchitecturalLayer :SecurityInMSA)

# Class: :Auditing (:Auditing)

SubClassOf(:Auditing :SecurityMechanism)

# Class: :Authentication (:Authentication)

SubClassOf(:Authentication :Access_Control)

# Class: :Authorization (:Authorization)

SubClassOf(:Authorization :Access_Control)

# Class: :Case_Study (:Case_Study)

SubClassOf(:Case_Study <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Security_V&V_Technique>)

# Class: :Complexity_Measuring (:Complexity_Measuring)

SubClassOf(:Complexity_Measuring <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Security_V&V_Technique>)

# Class: :Data_Attacks (:Data_Attacks)

SubClassOf(:Data_Attacks :SecurityThreat)

# Class: :Formal_Verification (:Formal_Verification)

SubClassOf(:Formal_Verification <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Security_V&V_Technique>)

# Class: :Infrastructure_Attacks (:Infrastructure_Attacks)

SubClassOf(:Infrastructure_Attacks :SecurityThreat)

# Class: :Manual_Testing (:Manual_Testing)

SubClassOf(:Manual_Testing <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Security_V&V_Technique>)

# Class: :Mitigation (:Mitigation)

SubClassOf(:Mitigation :SecurityMechanism)

# Class: :Performance_analysis (:Performance_analysis)

SubClassOf(:Performance_analysis <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Security_V&V_Technique>)

# Class: :Prevention (:Prevention)

SubClassOf(:Prevention :SecurityMechanism)

# Class: :Proof_Of_Concept (:Proof_Of_Concept)

SubClassOf(:Proof_Of_Concept <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Security_V&V_Technique>)

# Class: :Qualitative_analysis (:Qualitative_analysis)

SubClassOf(:Qualitative_analysis <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Security_V&V_Technique>)

# Class: :Quantitative_analysis (:Quantitative_analysis)

SubClassOf(:Quantitative_analysis <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Security_V&V_Technique>)

# Class: :SecurityMechanism (:SecurityMechanism)

SubClassOf(:SecurityMechanism :SecurityInMSA)

# Class: :SecurityThreat (:SecurityThreat)

SubClassOf(:SecurityThreat :SecurityInMSA)

# Class: :Simulation (:Simulation)

SubClassOf(:Simulation <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Security_V&V_Technique>)

# Class: :Software_Attacks (:Software_Attacks)

SubClassOf(:Software_Attacks :SecurityThreat)

# Class: :SolutionType (:SolutionType)

SubClassOf(:SolutionType :SecurityInMSA)

# Class: :TargetPlatform (:TargetPlatform)

SubClassOf(:TargetPlatform :SecurityInMSA)

# Class: :ThreatSource (:ThreatSource)

SubClassOf(:ThreatSource :SecurityInMSA)

# Class: :Tool_Based_Testing (:Tool_Based_Testing)

SubClassOf(:Tool_Based_Testing <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Security_V&V_Technique>)

# Class: :User_Based_Attacks (:User_Based_Attacks)

SubClassOf(:User_Based_Attacks :SecurityThreat)

# Class: <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Security_V&V_Technique> (<http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Security_V&V_Technique>)

SubClassOf(<http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Security_V&V_Technique> :SecurityInMSA)


############################
#   Named Individuals
############################

# Individual: :Ability_to_logout (:Ability_to_logout)

ClassAssertion(:Qualitative_analysis :Ability_to_logout)

# Individual: :Application_Programming_Interface (:Application_Programming_Interface)

ClassAssertion(:ArchitecturalLayer :Application_Programming_Interface)

# Individual: :Attribute-Based_Access_Control (:Attribute-Based_Access_Control)

ClassAssertion(:Authorization :Attribute-Based_Access_Control)
DataPropertyAssertion(:abbriviation :Attribute-Based_Access_Control "ABAC")

# Individual: :Blockchain_technology (:Blockchain_technology)

ClassAssertion(:Prevention :Blockchain_technology)
ObjectPropertyAssertion(:applicableAt :Blockchain_technology :Communication)
ObjectPropertyAssertion(:applicableTo :Blockchain_technology :Independent)
ObjectPropertyAssertion(:hasType :Blockchain_technology :Technique)
ObjectPropertyAssertion(:treats :Blockchain_technology :Sensitive_Data_Exposure)

# Individual: :Brute_Force_Attack (:Brute_Force_Attack)

ClassAssertion(:User_Based_Attacks :Brute_Force_Attack)
ObjectPropertyAssertion(:hasSource :Brute_Force_Attack :External)
ObjectPropertyAssertion(:hasSource :Brute_Force_Attack :Internal)
DataPropertyAssertion(:description :Brute_Force_Attack "A brute-force attack consists of an attacker submitting many passwords or passphrases with the hope of eventually guessing correctly. The attacker systematically checks all possible passwords and passphrases until the correct one is found. Alternatively, the attacker can attempt to guess the key which is typically created from the password using a key derivation function. [Wikipedia: https://en.wikipedia.org/wiki/Brute-force_attack]")

# Individual: :CPU_usage (:CPU_usage)

ClassAssertion(:Performance_analysis :CPU_usage)

# Individual: :Centralized_Control_Access_Manager (:Centralized_Control_Access_Manager)

ClassAssertion(:Authentication :Centralized_Control_Access_Manager)
ObjectPropertyAssertion(:applicableAt :Centralized_Control_Access_Manager :Soft-Infrastructure)
ObjectPropertyAssertion(:applicableTo :Centralized_Control_Access_Manager :Independent)
ObjectPropertyAssertion(:hasType :Centralized_Control_Access_Manager :Framework)
ObjectPropertyAssertion(:treats :Centralized_Control_Access_Manager :Brute_Force_Attack)
ObjectPropertyAssertion(:treats :Centralized_Control_Access_Manager :Spoofing_Attack)
ObjectPropertyAssertion(:treats :Centralized_Control_Access_Manager :Unauthorized_Access)

# Individual: :Certificates (:Certificates)

ClassAssertion(:Authentication :Certificates)
ObjectPropertyAssertion(:hasType :Certificates :Technique)

# Individual: :Cloud (:Cloud)

ClassAssertion(:TargetPlatform :Cloud)

# Individual: :Code_Reuse_Attack (:Code_Reuse_Attack)

ClassAssertion(:Software_Attacks :Code_Reuse_Attack)
ObjectPropertyAssertion(:hasSource :Code_Reuse_Attack :External)
DataPropertyAssertion(:description :Code_Reuse_Attack "Code reuse attack consists of subverting the intended control-flow of a program to invoke an unintended execution path inside the original program code. This includes calling an external malicious code,")

# Individual: :Communication (:Communication)

ClassAssertion(:ArchitecturalLayer :Communication)

# Individual: :Composition (:Composition)

ClassAssertion(:ArchitecturalLayer :Composition)

# Individual: :Compromise_Hypervisor (:Compromise_Hypervisor)

ClassAssertion(:Infrastructure_Attacks :Compromise_Hypervisor)
ObjectPropertyAssertion(:hasSource :Compromise_Hypervisor :Internal)
DataPropertyAssertion(:description :Compromise_Hypervisor "Compromising hypervisors enable attackers to unfetter access to every VM and the data stored on them.")

# Individual: :Compromise_Management_Interface (:Compromise_Management_Interface)

ClassAssertion(:Infrastructure_Attacks :Compromise_Management_Interface)
ObjectPropertyAssertion(:hasSource :Compromise_Management_Interface :External)
DataPropertyAssertion(:description :Compromise_Management_Interface "Management Interface in MSA enables subscribing, loading and destroying micorservices. Managment Interfaces are available online. Thus Compromising such management interfaces enables external attackers to get access and manipulate subscribed microservices.")

# Individual: :Compromise_Network_Nodes (:Compromise_Network_Nodes)

ClassAssertion(:Infrastructure_Attacks :Compromise_Network_Nodes)
ObjectPropertyAssertion(:hasSource :Compromise_Network_Nodes :External)
DataPropertyAssertion(:description :Compromise_Network_Nodes "Node compromise attacks enables capturing a node and access data or software stored on the node and destroy connectivity. Compromised nodes can also be redeployed back into the network and used to launch further attacks.")

# Individual: :Compromise_containers (:Compromise_containers)

ClassAssertion(:Infrastructure_Attacks :Compromise_containers)
SameIndividual(:Compromise_containers :Compromize_Virtual_Machines)
ObjectPropertyAssertion(:hasSource :Compromise_containers :Internal)
DataPropertyAssertion(:description :Compromise_containers "Compromising containers is a situation where attackers can spread cmpromised containers in container-based platforms after compromising user accounts or presented as malicious insider. With a single compromised container, attackers may move laterally across the corporate network, perhaps taking over the network completely.")

# Individual: :Compromise_discovery_service (:Compromise_discovery_service)

ClassAssertion(:Infrastructure_Attacks :Compromise_discovery_service)
ObjectPropertyAssertion(:hasSource :Compromise_discovery_service :Internal)
DataPropertyAssertion(:description :Compromise_discovery_service "A discovery service holds sensitive information about the location of all the microservices in MSA-based applications. It also registers new instances of  microservices. Thus, compromising a discovery service enables learning network location of all the microservices in MSA-based systems and allows registering malicious microservices into running applications.")

# Individual: :Compromise_microservices (:Compromise_microservices)

ClassAssertion(:Software_Attacks :Compromise_microservices)
ObjectPropertyAssertion(:hasSource :Compromise_microservices :Internal)
DataPropertyAssertion(:description :Compromise_microservices "Compromising an individual microservices may bring down the entire application (other micorservices) exploiting the trust model adopted by MSA.")

# Individual: :Compromize_Operating_Systems (:Compromize_Operating_Systems)

ClassAssertion(:Infrastructure_Attacks :Compromize_Operating_Systems)
ObjectPropertyAssertion(:hasSource :Compromize_Operating_Systems :External)
DataPropertyAssertion(:description :Compromize_Operating_Systems "A compromised operating system kernel can deceive other programs, the users, and the administrators of that computer system in difficult to detect ways.")

# Individual: :Compromize_Virtual_Machines (:Compromize_Virtual_Machines)

ClassAssertion(:Infrastructure_Attacks :Compromize_Virtual_Machines)
DataPropertyAssertion(:description :Compromize_Virtual_Machines "With asingle compromised VM, attackers may successfully get access to  other VMs on the same system and even the host.")

# Individual: :Container_based (:Container_based)

ClassAssertion(:TargetPlatform :Container_based)

# Individual: :Continuous_Monitoring (:Continuous_Monitoring)

ClassAssertion(:Auditing :Continuous_Monitoring)
ObjectPropertyAssertion(:applicableAt :Continuous_Monitoring :Soft-Infrastructure)
ObjectPropertyAssertion(:applicableTo :Continuous_Monitoring :Independent)
ObjectPropertyAssertion(:hasType :Continuous_Monitoring :Framework)
ObjectPropertyAssertion(:treats :Continuous_Monitoring :Compromise_Hypervisor)
ObjectPropertyAssertion(:treats :Continuous_Monitoring :Compromise_Management_Interface)
ObjectPropertyAssertion(:treats :Continuous_Monitoring :Compromise_Network_Nodes)
ObjectPropertyAssertion(:treats :Continuous_Monitoring :Compromise_containers)
ObjectPropertyAssertion(:treats :Continuous_Monitoring :Compromise_discovery_service)
ObjectPropertyAssertion(:treats :Continuous_Monitoring :Compromise_microservices)
ObjectPropertyAssertion(:treats :Continuous_Monitoring :Compromize_Operating_Systems)
ObjectPropertyAssertion(:treats :Continuous_Monitoring :Compromize_Virtual_Machines)
ObjectPropertyAssertion(:validatedThrough :Continuous_Monitoring :Throughput)

# Individual: :Cross-Site_Request_Forgery (:Cross-Site_Request_Forgery)

ClassAssertion(:User_Based_Attacks :Cross-Site_Request_Forgery)
ObjectPropertyAssertion(:hasSource :Cross-Site_Request_Forgery :External)
DataPropertyAssertion(:abbriviation :Cross-Site_Request_Forgery "CSRF")
DataPropertyAssertion(:description :Cross-Site_Request_Forgery "In a CSRF attack, the attacker's goal is to cause an innocent victim to unknowingly submit a maliciously crafted web request to a website that the victim has privileged access to. This web request can be crafted to include URL parameters, cookies and other data that appear normal to the web server processing the request. This may cause actions to be performed on the website that can include inadvertent client or server data leakage, change of session state, or manipulation of an end user's account. [Wikipedia: https://en.wikipedia.org/wiki/Cross-site_request_forgery]")

# Individual: :Deception (:Deception)

ClassAssertion(:Prevention :Deception)
ObjectPropertyAssertion(:applicableAt :Deception :Hard-Infrastructure)
ObjectPropertyAssertion(:applicableAt :Deception :Soft-Infrastructure)
ObjectPropertyAssertion(:applicableTo :Deception :Independent)
ObjectPropertyAssertion(:hasType :Deception :Technique)
ObjectPropertyAssertion(:treats :Deception :Compromise_Hypervisor)
ObjectPropertyAssertion(:treats :Deception :Compromise_Management_Interface)
ObjectPropertyAssertion(:treats :Deception :Compromise_Network_Nodes)
ObjectPropertyAssertion(:treats :Deception :Compromise_containers)
ObjectPropertyAssertion(:treats :Deception :Compromise_discovery_service)
ObjectPropertyAssertion(:treats :Deception :Compromise_microservices)
ObjectPropertyAssertion(:treats :Deception :Compromize_Virtual_Machines)
ObjectPropertyAssertion(:validatedThrough :Deception :Quality_of_Deception)

# Individual: :Denial_of_Service (:Denial_of_Service)

ClassAssertion(:Software_Attacks :Denial_of_Service)
ObjectPropertyAssertion(:hasSource :Denial_of_Service :Internal)
DataPropertyAssertion(:abbriviation :Denial_of_Service "DoS")
DataPropertyAssertion(:description :Denial_of_Service "A cyber-attack in which the perpetrator seeks to make a machine or network resource unavailable to its intended users by temporarily or indefinitely disrupting services of a host connected to the Internet. [Wikipedia: https://en.wikipedia.org/wiki/Denial-of-service_attack]")

# Individual: :Deployment (:Deployment)

ClassAssertion(:ArchitecturalLayer :Deployment)

# Individual: :Disrupt_Sensitive_Operation (:Disrupt_Sensitive_Operation)

ClassAssertion(:Software_Attacks :Disrupt_Sensitive_Operation)
ObjectPropertyAssertion(:hasSource :Disrupt_Sensitive_Operation :Internal)
DataPropertyAssertion(:description :Disrupt_Sensitive_Operation "Attackers can tamper with governing tools or scripts to manipulate governance routines. This may allow them to grant admin access or bypass authentication mechanisms by flipping bits in CPU registers.")

# Individual: :Distribute_sessions (:Distribute_sessions)

ClassAssertion(:Authentication :Distribute_sessions)

# Individual: :Diversification (:Diversification)

ClassAssertion(:Mitigation :Diversification)
ObjectPropertyAssertion(:validatedThrough :Diversification :Diversification_Index)

# Individual: :Diversification_Index (:Diversification_Index)

ClassAssertion(:Adhoc_Metrics :Diversification_Index)

# Individual: :Downgrade_Attack (:Downgrade_Attack)

ClassAssertion(:Infrastructure_Attacks :Downgrade_Attack)
ObjectPropertyAssertion(:hasSource :Downgrade_Attack :External)
DataPropertyAssertion(:description :Downgrade_Attack "Downgrade attack consists of downgrading the adopted security measures and protocols used in an executing system. This includes TLS version rollback and redirecting the user from the secure, HTTPS version of a website to an unencrypted HTTP version. [Wikipedia: https://en.wikipedia.org/wiki/Downgrade_attack]")

# Individual: :Dynamic_code_analysis (:Dynamic_code_analysis)

ClassAssertion(:Auditing :Dynamic_code_analysis)

# Individual: :Eavesdropping (:Eavesdropping)

ClassAssertion(:Data_Attacks :Eavesdropping)
ObjectPropertyAssertion(:hasSource :Eavesdropping :External)
DataPropertyAssertion(:description :Eavesdropping "Network eavesdropping is a network layer attack that focuses on capturing small packets from the network transmitted by other computers and reading the data content in search of any type of information. [Wikipedia: https://en.wikipedia.org/wiki/Eavesdropping]")

# Individual: :Encryption (:Encryption)

ClassAssertion(:Prevention :Encryption)
ObjectPropertyAssertion(:applicableAt :Encryption :Communication)
ObjectPropertyAssertion(:applicableTo :Encryption :Independent)
ObjectPropertyAssertion(:hasType :Encryption :Technique)
ObjectPropertyAssertion(:treats :Encryption :Sensitive_Data_Exposure)
ObjectPropertyAssertion(:validatedThrough :Encryption :CPU_usage)
ObjectPropertyAssertion(:validatedThrough :Encryption :Throughput)

# Individual: :External (:External)

ClassAssertion(:ThreatSource :External)

# Individual: :Firewalls (:Firewalls)

ClassAssertion(:Authentication :Firewalls)
ClassAssertion(:Authorization :Firewalls)
ObjectPropertyAssertion(:applicableAt :Firewalls :Soft-Infrastructure)
ObjectPropertyAssertion(:applicableTo :Firewalls :Independent)
ObjectPropertyAssertion(:hasType :Firewalls :Tool)
ObjectPropertyAssertion(:treats :Firewalls :Unauthorized_Access)

# Individual: :Framework (:Framework)

ClassAssertion(:SolutionType :Framework)

# Individual: :Gateways (:Gateways)

ClassAssertion(:Authentication :Gateways)
ClassAssertion(:Authorization :Gateways)

# Individual: :Gatling_Open_Source_Load_Testing (:Gatling_Open_Source_Load_Testing)

ClassAssertion(:Tool_Based_Testing :Gatling_Open_Source_Load_Testing)

# Individual: :General_Protection_Measures (:General_Protection_Measures)

ClassAssertion(:SolutionType :General_Protection_Measures)

# Individual: :HIP_exchange_protocol (:HIP_exchange_protocol)

ClassAssertion(:Authentication :HIP_exchange_protocol)

# Individual: :HTTP_signatures (:HTTP_signatures)

ClassAssertion(:Authentication :HTTP_signatures)

# Individual: :Hard-Infrastructure (:Hard-Infrastructure)

ClassAssertion(:ArchitecturalLayer :Hard-Infrastructure)
ObjectPropertyAssertion(:applicableAt :Hard-Infrastructure :Hard-Infrastructure)
ObjectPropertyAssertion(:applicableAt :Hard-Infrastructure :Microservice)
ObjectPropertyAssertion(:applicableTo :Hard-Infrastructure :Independent)
ObjectPropertyAssertion(:hasType :Hard-Infrastructure :Technique)
ObjectPropertyAssertion(:treats :Hard-Infrastructure :Compromise_microservices)

# Individual: :Hardware_Security_Module (:Hardware_Security_Module)

ClassAssertion(:Prevention :Hardware_Security_Module)
ObjectPropertyAssertion(:applicableAt :Hardware_Security_Module :Communication)
ObjectPropertyAssertion(:applicableAt :Hardware_Security_Module :Hard-Infrastructure)
ObjectPropertyAssertion(:applicableAt :Hardware_Security_Module :Soft-Infrastructure)
ObjectPropertyAssertion(:applicableTo :Hardware_Security_Module :Independent)
ObjectPropertyAssertion(:hasType :Hardware_Security_Module :General_Protection_Measures)
ObjectPropertyAssertion(:treats :Hardware_Security_Module :Sensitive_Data_Exposure)
ObjectPropertyAssertion(:treats :Hardware_Security_Module :Unauthorized_Access)

# Individual: :Hardware_backdoors (:Hardware_backdoors)

ClassAssertion(:Infrastructure_Attacks :Hardware_backdoors)
ObjectPropertyAssertion(:hasSource :Hardware_backdoors :Internal)
DataPropertyAssertion(:description :Hardware_backdoors "Hardware backdoors are backdoors in hardware, such as code inside hardware or firmware of computer chips that can be used to bypass or disable the security fence of a system. [Wikipedia: https://en.wikipedia.org/wiki/Hardware_backdoor]")

# Individual: :Heartblead (:Heartblead)

ClassAssertion(:Data_Attacks :Heartblead)
ObjectPropertyAssertion(:hasSource :Heartblead :External)
DataPropertyAssertion(:description :Heartblead "The Heartbleed bug is a severe implementation flaw in the OpenSSL library. It enables remote attackers to steal data from the memory of a victim servers via crafted packets that trigger a buffer over-read when communicating using TLS protocol.")

# Individual: :IP_Suffling (:IP_Suffling)

ClassAssertion(:Mitigation :IP_Suffling)

# Individual: :Independent (:Independent)

ClassAssertion(:TargetPlatform :Independent)

# Individual: :Injection (:Injection)

ClassAssertion(:Software_Attacks :Injection)
ObjectPropertyAssertion(:hasSource :Injection :External)
DataPropertyAssertion(:description :Injection "Suppling untrusted input to a program, which gets processed by an interpreter as part of a command or query which alters the course of execution of that program.")

# Individual: :IntelliJ_IDEA_Unit-Testing (:IntelliJ_IDEA_Unit-Testing)

ClassAssertion(:Tool_Based_Testing :IntelliJ_IDEA_Unit-Testing)

# Individual: :Internal (:Internal)

ClassAssertion(:ThreatSource :Internal)

# Individual: :IoT (:IoT)

ClassAssertion(:TargetPlatform :IoT)

# Individual: :Isolation_of_sucpecious_microservices (:Isolation_of_sucpecious_microservices)

ClassAssertion(:Mitigation :Isolation_of_sucpecious_microservices)

# Individual: :J-Pack_protocol (:J-Pack_protocol)

ClassAssertion(:Authentication :J-Pack_protocol)

# Individual: :JSON_Web_Tokens (:JSON_Web_Tokens)

ClassAssertion(:Authentication :JSON_Web_Tokens)
ClassAssertion(:Authorization :JSON_Web_Tokens)

# Individual: :Jadex (:Jadex)

ClassAssertion(:TargetPlatform :Jadex)

# Individual: :Kubernetes (:Kubernetes)

ClassAssertion(:TargetPlatform :Kubernetes)

# Individual: :Least-privilege (:Least-privilege)

ClassAssertion(:Prevention :Least-privilege)
ObjectPropertyAssertion(:applicableAt :Least-privilege :Application_Programming_Interface)
ObjectPropertyAssertion(:applicableAt :Least-privilege :Microservice)
ObjectPropertyAssertion(:applicableAt :Least-privilege :Soft-Infrastructure)
ObjectPropertyAssertion(:applicableTo :Least-privilege :Independent)
ObjectPropertyAssertion(:hasType :Least-privilege :General_Protection_Measures)
ObjectPropertyAssertion(:treats :Least-privilege :Unauthorized_Access)

# Individual: :Live_migration (:Live_migration)

ClassAssertion(:Mitigation :Live_migration)
ObjectPropertyAssertion(:applicableAt :Live_migration :Hard-Infrastructure)
ObjectPropertyAssertion(:applicableAt :Live_migration :Microservice)
ObjectPropertyAssertion(:applicableTo :Live_migration :Independent)
ObjectPropertyAssertion(:hasType :Live_migration :Technique)
ObjectPropertyAssertion(:treats :Live_migration :Compromise_containers)
ObjectPropertyAssertion(:treats :Live_migration :Compromise_discovery_service)
ObjectPropertyAssertion(:treats :Live_migration :Compromise_microservices)

# Individual: :Machine_learning (:Machine_learning)

ClassAssertion(:Auditing :Machine_learning)

# Individual: :Malicious_Images (:Malicious_Images)

ClassAssertion(:Infrastructure_Attacks :Malicious_Images)
ObjectPropertyAssertion(:hasSource :Malicious_Images :Internal)
DataPropertyAssertion(:description :Malicious_Images "Loading malicious images into containers make those containers susceptible to cryptojacking which give attackers root access to the entire container.")

# Individual: :Malicious_Insider (:Malicious_Insider)

ClassAssertion(:User_Based_Attacks :Malicious_Insider)
ObjectPropertyAssertion(:hasSource :Malicious_Insider :Internal)
DataPropertyAssertion(:also_known_as :Malicious_Insider "Turncloak")
DataPropertyAssertion(:description :Malicious_Insider "Malicious insider attacks are caused by someone who maliciously and intentionally abuses legitimate credentials, typically to steal information for financial or personal incentives. Malicious insiders have an advantage over other attackers because they are familiar with the security policies and procedures of an organization, as well as its vulnerabilities.")

# Individual: :Malicious_Provider (:Malicious_Provider)

ClassAssertion(:Infrastructure_Attacks :Malicious_Provider)
ObjectPropertyAssertion(:hasSource :Malicious_Provider :Internal)
DataPropertyAssertion(:description :Malicious_Provider "A malicious provider could violate users’ privacy, but it could also equivocate and show different users divergent views of the system’s state,
and introduce hardware or software backdoors.")

# Individual: :Man_in_The_Middle (:Man_in_The_Middle)

ClassAssertion(:Data_Attacks :Man_in_The_Middle)
SameIndividual(:Man_in_The_Middle :Padding_Oracle_On_Downgraded_Legacy_Encryption_Attack)
ObjectPropertyAssertion(:hasSource :Man_in_The_Middle :External)
DataPropertyAssertion(:abbriviation :Man_in_The_Middle "MiTM")
DataPropertyAssertion(:description :Man_in_The_Middle "A man-in-the-middle attack (MITM) is an attack where the attacker secretly relays and possibly alters the communications between two parties who believe that they are directly communicating with each other. [Wikipedia: https://en.wikipedia.org/wiki/Man-in-the-middle_attack]")

# Individual: :Methodology (:Methodology)

ClassAssertion(:SolutionType :Methodology)

# Individual: :Microservice (:Microservice)

ClassAssertion(:ArchitecturalLayer :Microservice)

# Individual: :Misconfiguration (:Misconfiguration)

ClassAssertion(:Infrastructure_Attacks :Misconfiguration)
ObjectPropertyAssertion(:hasSource :Misconfiguration :External)
DataPropertyAssertion(:description :Misconfiguration "Security misconfiguration can happen at any level of an application stack, including the network services, platform, web server, application server, database, frameworks, custom code, and pre-installed virtual machines, containers, or storage. Such flaws frequently give attackers unauthorized access to some system data or functionality. Occasionally, such flaws result in a complete system compromise. [OWASP: https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A6-Security_Misconfiguration]")

# Individual: :No-shared_memory_access (:No-shared_memory_access)

ClassAssertion(:Prevention :No-shared_memory_access)
ObjectPropertyAssertion(:applicableAt :No-shared_memory_access :Hard-Infrastructure)
ObjectPropertyAssertion(:applicableAt :No-shared_memory_access :Soft-Infrastructure)
ObjectPropertyAssertion(:applicableTo :No-shared_memory_access :Independent)
ObjectPropertyAssertion(:hasType :No-shared_memory_access :General_Protection_Measures)
ObjectPropertyAssertion(:treats :No-shared_memory_access :Unauthorized_Access)

# Individual: :No_inherent_bottelneck (:No_inherent_bottelneck)

ClassAssertion(:Qualitative_analysis :No_inherent_bottelneck)

# Individual: :OAuth2 (:OAuth2)

ClassAssertion(:Authorization :OAuth2)

# Individual: :OpenAPI_Documents (:OpenAPI_Documents)

ClassAssertion(:Tool_Based_Testing :OpenAPI_Documents)

# Individual: :Open_ID (:Open_ID)

ClassAssertion(:Authentication :Open_ID)
ObjectPropertyAssertion(:applicableAt :Open_ID :Soft-Infrastructure)
ObjectPropertyAssertion(:applicableTo :Open_ID :Independent)
ObjectPropertyAssertion(:hasType :Open_ID :Technique)
ObjectPropertyAssertion(:treats :Open_ID :Unauthorized_Access)

# Individual: :Osmotic (:Osmotic)

ClassAssertion(:TargetPlatform :Osmotic)

# Individual: :Padding_Oracle_On_Downgraded_Legacy_Encryption_Attack (:Padding_Oracle_On_Downgraded_Legacy_Encryption_Attack)

ClassAssertion(:Data_Attacks :Padding_Oracle_On_Downgraded_Legacy_Encryption_Attack)
ObjectPropertyAssertion(:hasSource :Padding_Oracle_On_Downgraded_Legacy_Encryption_Attack :External)
DataPropertyAssertion(:abbriviation :Padding_Oracle_On_Downgraded_Legacy_Encryption_Attack "POODLE")
DataPropertyAssertion(:description :Padding_Oracle_On_Downgraded_Legacy_Encryption_Attack "The POODLE attack is a man-in-the-middle exploit which takes advantage of Internet and security software clients' fallback to SSL 3.0. If attackers successfully exploit this vulnerability, on average, they only need to make 256 SSL 3.0 requests to reveal one byte of encrypted messages. [Wikipedia: https://en.wikipedia.org/wiki/POODLE]")

# Individual: :Port_Scan_Attack (:Port_Scan_Attack)

ClassAssertion(:Infrastructure_Attacks :Port_Scan_Attack)
ObjectPropertyAssertion(:hasSource :Port_Scan_Attack :Internal)
DataPropertyAssertion(:description :Port_Scan_Attack "A port scan attack conisists of sending client requests to a range of server port addresses on a host, with the goal of finding an active port and exploiting a known vulnerability of that service.")

# Individual: :Proper_design (:Proper_design)

ClassAssertion(:Prevention :Proper_design)
ObjectPropertyAssertion(:applicableAt :Proper_design :Application_Programming_Interface)
ObjectPropertyAssertion(:applicableAt :Proper_design :Composition)
ObjectPropertyAssertion(:applicableAt :Proper_design :Deployment)
ObjectPropertyAssertion(:applicableAt :Proper_design :Microservice)
ObjectPropertyAssertion(:applicableAt :Proper_design :Soft-Infrastructure)
ObjectPropertyAssertion(:applicableTo :Proper_design :Independent)
ObjectPropertyAssertion(:hasType :Proper_design :General_Protection_Measures)
ObjectPropertyAssertion(:treats :Proper_design :Compromise_containers)
ObjectPropertyAssertion(:treats :Proper_design :Compromise_microservices)
ObjectPropertyAssertion(:treats :Proper_design :Compromize_Virtual_Machines)

# Individual: :Quality_of_Deception (:Quality_of_Deception)

ClassAssertion(:Adhoc_Metrics :Quality_of_Deception)

# Individual: :Replay_Attack (:Replay_Attack)

ClassAssertion(:Data_Attacks :Replay_Attack)
ObjectPropertyAssertion(:hasSource :Replay_Attack :External)
DataPropertyAssertion(:description :Replay_Attack "A replay attack is a form of network attack in which a valid data transmission is maliciously or fraudulently repeated or delayed. [Wikipedia: https://en.wikipedia.org/wiki/Replay_attack]")

# Individual: :Restart_micorservices (:Restart_micorservices)

ClassAssertion(:Mitigation :Restart_micorservices)
ObjectPropertyAssertion(:applicableAt :Restart_micorservices :Microservice)
ObjectPropertyAssertion(:applicableTo :Restart_micorservices :Independent)
ObjectPropertyAssertion(:hasType :Restart_micorservices :Technique)
ObjectPropertyAssertion(:treats :Restart_micorservices :Compromise_microservices)

# Individual: :Role-Based_Access_Control (:Role-Based_Access_Control)

ClassAssertion(:Authorization :Role-Based_Access_Control)
DataPropertyAssertion(:abbriviation :Role-Based_Access_Control "RBAC")

# Individual: :Rollback_microservices (:Rollback_microservices)

ClassAssertion(:Mitigation :Rollback_microservices)
ObjectPropertyAssertion(:applicableAt :Rollback_microservices :Hard-Infrastructure)
ObjectPropertyAssertion(:applicableAt :Rollback_microservices :Microservice)
ObjectPropertyAssertion(:applicableAt :Rollback_microservices :Soft-Infrastructure)
ObjectPropertyAssertion(:applicableTo :Rollback_microservices :Independent)
ObjectPropertyAssertion(:hasType :Rollback_microservices :Technique)
ObjectPropertyAssertion(:treats :Rollback_microservices :Compromise_microservices)

# Individual: :SGX_Technology_with_enclaves (:SGX_Technology_with_enclaves)

ClassAssertion(:Prevention :SGX_Technology_with_enclaves)
ObjectPropertyAssertion(:applicableAt :SGX_Technology_with_enclaves :Deployment)
ObjectPropertyAssertion(:applicableAt :SGX_Technology_with_enclaves :Hard-Infrastructure)
ObjectPropertyAssertion(:applicableTo :SGX_Technology_with_enclaves :Cloud)
ObjectPropertyAssertion(:hasType :SGX_Technology_with_enclaves :Technique)
ObjectPropertyAssertion(:treats :SGX_Technology_with_enclaves :Unauthorized_Access)

# Individual: :Sandbox_escape (:Sandbox_escape)

ClassAssertion(:Infrastructure_Attacks :Sandbox_escape)
ObjectPropertyAssertion(:hasSource :Sandbox_escape :Internal)
DataPropertyAssertion(:description :Sandbox_escape "Sandbox escape consists of doing something within the sandboxed microservice that forces it to crash in some way or achieve a function that would allow you to run arbitrary code and execute code outside of the sandbox.")

# Individual: :Scan_container_images (:Scan_container_images)

ClassAssertion(:Auditing :Scan_container_images)

# Individual: :Secure_language (:Secure_language)

ClassAssertion(:Prevention :Secure_language)
ObjectPropertyAssertion(:applicableAt :Secure_language :Application_Programming_Interface)
ObjectPropertyAssertion(:applicableAt :Secure_language :Microservice)
ObjectPropertyAssertion(:applicableTo :Secure_language :Independent)
ObjectPropertyAssertion(:hasType :Secure_language :General_Protection_Measures)
ObjectPropertyAssertion(:treats :Secure_language :Code_Reuse_Attack)
ObjectPropertyAssertion(:treats :Secure_language :Compromise_microservices)
ObjectPropertyAssertion(:treats :Secure_language :Injection)
DataPropertyAssertion(:description :Secure_language "Software applications are typically specified and implemented in certain programming languages, and in order to protect against attacks, flaws and bugs an application’s source code might be vulnerable to, there is a need for application-level security; security evaluating the applications behavior with respect to the programming language. This area is generally known as language-based security. [Wikipedia: https://en.wikipedia.org/wiki/Language-based_security]")

# Individual: :Sensitive_Data_Exposure (:Sensitive_Data_Exposure)

ClassAssertion(:Data_Attacks :Sensitive_Data_Exposure)
ObjectPropertyAssertion(:hasSource :Sensitive_Data_Exposure :External)
ObjectPropertyAssertion(:hasSource :Sensitive_Data_Exposure :Internal)
DataPropertyAssertion(:description :Sensitive_Data_Exposure "Sensitive Data Exposure occurs when an application does not adequately protect sensitive information. The data can vary and anything from passwords, session tokens, credit card data to private health data and more can be exposed.")

# Individual: :Session_Hijacking (:Session_Hijacking)

ClassAssertion(:Infrastructure_Attacks :Session_Hijacking)
ObjectPropertyAssertion(:hasSource :Session_Hijacking :External)
DataPropertyAssertion(:description :Session_Hijacking "Session hijacking is a method of taking over a Web user session by surreptitiously obtaining the session ID and masquerading as the authorized user. Once the user's session ID has been accessed (through session prediction), the attacker can masquerade as that user and do anything the user is authorized to do on the network.")

# Individual: :Short-lived_Tokens (:Short-lived_Tokens)

ClassAssertion(:Mitigation :Short-lived_Tokens)
ObjectPropertyAssertion(:applicableAt :Short-lived_Tokens :Communication)
ObjectPropertyAssertion(:applicableAt :Short-lived_Tokens :Soft-Infrastructure)
ObjectPropertyAssertion(:applicableTo :Short-lived_Tokens :Independent)
ObjectPropertyAssertion(:hasType :Short-lived_Tokens :General_Protection_Measures)
ObjectPropertyAssertion(:treats :Short-lived_Tokens :Eavesdropping)
ObjectPropertyAssertion(:treats :Short-lived_Tokens :Sensitive_Data_Exposure)
ObjectPropertyAssertion(:treats :Short-lived_Tokens :Unauthorized_Access)

# Individual: :Simple_to_implement (:Simple_to_implement)

ClassAssertion(:Qualitative_analysis :Simple_to_implement)

# Individual: :Single_Sign-On (:Single_Sign-On)

ClassAssertion(:Authentication :Single_Sign-On)
ObjectPropertyAssertion(:applicableAt :Single_Sign-On :Soft-Infrastructure)
ObjectPropertyAssertion(:applicableTo :Single_Sign-On :Independent)
ObjectPropertyAssertion(:hasType :Single_Sign-On :Technique)
ObjectPropertyAssertion(:treats :Single_Sign-On :Unauthorized_Access)
DataPropertyAssertion(:abbriviation :Single_Sign-On "SSO")

# Individual: :Single_point_feailure (:Single_point_feailure)

ClassAssertion(:Qualitative_analysis :Single_point_feailure)

# Individual: :Smart-Contracts (:Smart-Contracts)

ClassAssertion(:Prevention :Smart-Contracts)
ObjectPropertyAssertion(:applicableAt :Smart-Contracts :Communication)
ObjectPropertyAssertion(:applicableTo :Smart-Contracts :Independent)
ObjectPropertyAssertion(:hasType :Smart-Contracts :Technique)
ObjectPropertyAssertion(:treats :Smart-Contracts :Unauthorized_Access)

# Individual: :Sniffing_Attack (:Sniffing_Attack)

ClassAssertion(:Data_Attacks :Sniffing_Attack)
ObjectPropertyAssertion(:hasSource :Sniffing_Attack :External)
DataPropertyAssertion(:description :Sniffing_Attack "Sniffing attack consists of intercepting data by capturing the network traffic using specifc applications (a.k.a. sniffer) that aim to capture unencrypted network packets. [Wikipedia: https://en.wikipedia.org/wiki/Sniffing_attack]")

# Individual: :Soft-Infrastructure (:Soft-Infrastructure)

ClassAssertion(:ArchitecturalLayer :Soft-Infrastructure)

# Individual: :Spoofing_Attack (:Spoofing_Attack)

ClassAssertion(:User_Based_Attacks :Spoofing_Attack)
ObjectPropertyAssertion(:hasSource :Spoofing_Attack :External)
DataPropertyAssertion(:description :Spoofing_Attack "A Spoofing attack is a situation in which a person or program successfully identifies as another by falsifying data, to gain an illegitimate advantage. [Wikipedia: https://en.wikipedia.org/wiki/Spoofing_attack]")

# Individual: :Spring (:Spring)

ClassAssertion(:TargetPlatform :Spring)

# Individual: :Static_code_analysis (:Static_code_analysis)

ClassAssertion(:Auditing :Static_code_analysis)

# Individual: :Stress_Attack (:Stress_Attack)

ClassAssertion(:Infrastructure_Attacks :Stress_Attack)
ObjectPropertyAssertion(:hasSource :Stress_Attack :Internal)
DataPropertyAssertion(:description :Stress_Attack "Stress attack consits of stressing the infrastructure by increasing its CPU utilization and deceive the autoscaling system to provide more resources.")

# Individual: :TLS_protocol (:TLS_protocol)

ClassAssertion(:Prevention :TLS_protocol)
ObjectPropertyAssertion(:applicableAt :TLS_protocol :Communication)
ObjectPropertyAssertion(:applicableAt :TLS_protocol :Soft-Infrastructure)
ObjectPropertyAssertion(:applicableTo :TLS_protocol :Independent)
ObjectPropertyAssertion(:hasType :TLS_protocol :Technique)
ObjectPropertyAssertion(:treats :TLS_protocol :Man_in_The_Middle)
ObjectPropertyAssertion(:treats :TLS_protocol :Sensitive_Data_Exposure)
ObjectPropertyAssertion(:treats :TLS_protocol :Unauthorized_Access)

# Individual: :Technique (:Technique)

ClassAssertion(:SolutionType :Technique)

# Individual: :Throughput (:Throughput)

ClassAssertion(:Performance_analysis :Throughput)

# Individual: :Tool (:Tool)

ClassAssertion(:SolutionType :Tool)

# Individual: :Traffic_measurement (:Traffic_measurement)

ClassAssertion(:Performance_analysis :Traffic_measurement)

# Individual: :Unauthorized_Access (:Unauthorized_Access)

ClassAssertion(:User_Based_Attacks :Unauthorized_Access)
ObjectPropertyAssertion(:hasSource :Unauthorized_Access :External)
ObjectPropertyAssertion(:hasSource :Unauthorized_Access :Internal)
DataPropertyAssertion(:description :Unauthorized_Access "Unauthorized access attacks include any attempt by a person who knowingly tries to access a system or a service to which that person does not have specific access permissions.")

# Individual: :Violate_Non-repudiation (:Violate_Non-repudiation)

ClassAssertion(:User_Based_Attacks :Violate_Non-repudiation)
ObjectPropertyAssertion(:hasSource :Violate_Non-repudiation :External)
DataPropertyAssertion(:description :Violate_Non-repudiation "Violate non-repudiation attacks typically either directly target related security requirements (i.e., integrity, authentication, and availability) or directly target weak points in the non-repudiation schemes such as deciphering a weak cryptographic key used in digital signature.")

# Individual: :Web_app (:Web_app)

ClassAssertion(:TargetPlatform :Web_app)

# Individual: <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#5G> (<http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#5G>)

ClassAssertion(:TargetPlatform <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#5G>)

# Individual: <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#R/W_permission_to_message_broker> (<http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#R/W_permission_to_message_broker>)

ClassAssertion(:Authorization <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#R/W_permission_to_message_broker>)

# Individual: <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Sacle-up/down_N-variant_micorservices> (<http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Sacle-up/down_N-variant_micorservices>)

ClassAssertion(:Mitigation <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Sacle-up/down_N-variant_micorservices>)
ObjectPropertyAssertion(:applicableAt <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Sacle-up/down_N-variant_micorservices> :Hard-Infrastructure)
ObjectPropertyAssertion(:applicableAt <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Sacle-up/down_N-variant_micorservices> :Microservice)
ObjectPropertyAssertion(:applicableAt <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Sacle-up/down_N-variant_micorservices> :Soft-Infrastructure)
ObjectPropertyAssertion(:applicableTo <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Sacle-up/down_N-variant_micorservices> :Independent)
ObjectPropertyAssertion(:hasType <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Sacle-up/down_N-variant_micorservices> :Technique)
ObjectPropertyAssertion(:treats <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#Sacle-up/down_N-variant_micorservices> :Compromise_microservices)

# Individual: <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#White-list_HTTP/IP> (<http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#White-list_HTTP/IP>)

ClassAssertion(:Authentication <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#White-list_HTTP/IP>)
ObjectPropertyAssertion(:applicableAt <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#White-list_HTTP/IP> :Soft-Infrastructure)
ObjectPropertyAssertion(:applicableTo <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#White-list_HTTP/IP> :Independent)
ObjectPropertyAssertion(:hasType <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#White-list_HTTP/IP> :Technique)
ObjectPropertyAssertion(:treats <http://www.semanticweb.org/hannousse/ontologies/2020/2/SecurityInMSA#White-list_HTTP/IP> :Unauthorized_Access)


)